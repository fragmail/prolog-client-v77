//===========================================
// Данный программный продукт (обработка) распространяется 
// в соответствии с условиями и ограничениями лицензии
// Creative Commons Zero v1.0 Universal, с
// текстом которой можно ознакомиться на сайте организации:
// https://creativecommons.org/publicdomain/zero/1.0/
// Исходный код и авторские версии продукта можно найти в 
// публичном репозитории:
// https://github.com/fragmail/prolog-client-v77 
//===========================================
// Модель развозки
//===========================================
Перем тзПунктыДоставки, тзМаршруты, Математика, сзСлЧис;
//===========================================
// Управление картой
//===========================================
Перем Браузер, Карта, РазмерОтступа, мНомерСтроки;
//===========================================
// Управление элементами формы
//===========================================
Перем мШирина, мВысота, тзПривязки, тзАтрибуты, сзЦвета; 
//===========================================
// Обработчики событий
//===========================================
Перем мРасшФорма, мВремяЗапроса;
//===========================================
// Интерфейс
//===========================================
// Модель развозки
//===========================================
Процедура АвтоПодборПунктовДоставки() Далее
Процедура ПоказатьПунктыДоставкиНаКарте() Далее
Процедура ВыполнитьГеокодированиеНачало() Далее
Функция СоставитьСтрокуГеокодированияПунктовДоставки(ОбъемВыборки,
	стрГеокодирования) Далее 

Процедура ДополнитьТаблицуМаршрутовДаннымиГеокодирования() Далее	
//===========================================
// Управление картой
//===========================================
Функция СтатусКарты(Статус = "") Далее
Функция УстановитьОтметкуНаКарте(Широта, 
	Долгота, Маркер = "", Подсказка = "") Далее

Процедура УдалитьПунктыДоставкиНаКарте() Далее	
Процедура ОтправитьЗапросНаГеокодирование(стрГеокодирования) Далее
//===========================================
// Управление элементами формы
//===========================================
Процедура ПолучитьАктуальныеРазмерыКарты(Ш, В) Далее
Процедура ОтобразитьНаФормеРезультатВыбораТочкиНаКарте() Далее
Процедура ОтобразитьЧислоЗаданийКарты(Колво) Далее
//===========================================
// Обработчики событий
//===========================================
Процедура ПриОбновленииДанныхТаблицыМаршрутов() Далее
//===========================================
// Интерфейс
//===========================================
// Модель развозки
//===========================================
Процедура ВыборкаПоМетодуМонтеКарло(КолвоСтрок) 
	
	сзСлЧис.УдалитьВсе();
	
	Математика.SRAND(_GetPerformanceCounter());
    
	КолвоСтрок = пОбъемВыборки - тзПунктыДоставки.КоличествоСтрок();
	
	КолвоИтераций = КолвоСтрок * 2;
	
	Для й = 1 По КолвоИтераций Цикл
		
		Значение = Математика.RAND1();
				
		сзСлЧис.ДобавитьЗначение(Значение);
		
	КонецЦикла;
	
КонецПроцедуры
//===========================================
Процедура СоставитьКоординатыПоМодельнымДанным(КолвоСтрок)
	
	Для й = 0 По КолвоСтрок - 1 Цикл
		
		тзПунктыДоставки.НоваяСтрока();
		тзПунктыДоставки.Уточнен = 0;
		
		тзПунктыДоставки.Широта = Окр(пШирота   + пДиаметр 
			* (сзСлЧис.ПолучитьЗначение(й * 2 + 1) - 0.5), 8);
		
		тзПунктыДоставки.Долгота = Окр(пДолгота + 2 * пДиаметр 
			* (сзСлЧис.ПолучитьЗначение(й * 2 + 2) - 0.5), 8);
		
	КонецЦикла;

КонецПроцедуры	
//===========================================
Процедура ВыполнитьГеокодированиеЗавершение()
	
	Если СтатусКарты() = "АвтоПодбор" Тогда
		
		АвтоПодборПунктовДоставки();
		
	Иначе	
		
		ДополнитьТаблицуМаршрутовДаннымиГеокодирования();
		
	КонецЕсли;	
	
КонецПроцедуры
//===========================================
Процедура ВыполнитьГеокодированиеИтерация()
	
	НС = тзПунктыДоставки.КоличествоСтрок(); 
	
	Пока НС > 0 Цикл
		
		тзПунктыДоставки.ПолучитьСтрокуПоНомеру(НС);
		
		Если тзПунктыДоставки.Адрес = "undefined" Тогда
// в ходе моделирования, попали в область на карте, не содержащую адресной 
// информации - удалить строку из результатов моделирования				
			тзПунктыДоставки.УдалитьСтроку(НС);	
		КонецЕсли;
		
		НС = НС - 1;
		
	КонецЦикла;	
	
	ВыполнитьГеокодированиеНачало();
	
КонецПроцедуры
//===========================================
Процедура ВыполнитьГеокодированиеНачало()
	Перем стрГеокодирования;
	
	Если СоставитьСтрокуГеокодированияПунктовДоставки(10, стрГеокодирования) > 0 Тогда
		
		ОтправитьЗапросНаГеокодирование(стрГеокодирования);	
			
	Иначе
			
		ВыполнитьГеокодированиеЗавершение();
		
	КонецЕсли;	
	
КонецПроцедуры	
//===========================================
Процедура АвтоПодборПунктовДоставки()
	Перем КолвоСтрок;
	
	ВыборкаПоМетодуМонтеКарло(КолвоСтрок); 
	
	Если КолвоСтрок > 0 Тогда
		
		СоставитьКоординатыПоМодельнымДанным(КолвоСтрок);		
			
		ВыполнитьГеокодированиеНачало();
			
	Иначе
// выполнили план по подборке пунктов доставки
		ДополнитьТаблицуМаршрутовДаннымиГеокодирования();
		
	КонецЕсли;	
	
КонецПроцедуры
//===========================================
Процедура ПодготовитьТаблицы()
	
	УдалитьПунктыДоставкиНаКарте();
	
	тзПунктыДоставки.УдалитьСтроки();
	
	тзМаршруты.УдалитьСтроки();
	
КонецПроцедуры
//===========================================
Процедура СкопироватьГеоданные(Объект1, Префикс1, Объект2, Префикс2)
	
	сзРеквизиты = СоздатьОбъект("СписокЗначений");
	сзРеквизиты.ИзСтрокиСРазделителями("""Ид"",""Адрес"",""Широта"",""Долгота"",""Область""");

	Для й = 1 По сзРеквизиты.РазмерСписка() Цикл
		
		ИмяРек = сзРеквизиты.ПолучитьЗначение(й);
		
		Объект1.УстановитьЗначение(Объект1.НомерСтроки, Префикс1 + ИмяРек, 
			Объект2.ПолучитьЗначение(Объект2.НомерСтроки, Префикс2 + ИмяРек));
				
	КонецЦикла;
	
КонецПроцедуры
//===========================================
Процедура ПодготовитьДанныеДляГеокодирования()
	
	тзМаршруты.ВыбратьСтроки();
	
	Пока тзМаршруты.ПолучитьСтроку() = 1 Цикл
		
		НС = 0;
		
		Если тзПунктыДоставки.НайтиЗначение(тзМаршруты
			.ОткудаИд, НС, "Ид") = 0 Тогда
				
			тзПунктыДоставки.НоваяСтрока();
			СкопироватьГеоданные(тзПунктыДоставки, "", тзМаршруты, "Откуда");
			
		КонецЕсли;
		
		Если тзПунктыДоставки.НайтиЗначение(тзМаршруты
			.КудаИд,   НС, "Ид") = 0 Тогда
				
			тзПунктыДоставки.НоваяСтрока();
			СкопироватьГеоданные(тзПунктыДоставки, "", тзМаршруты, "Куда");
			
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры
//===========================================
Процедура СоздатьТаблицуМаршрутов()
	
	Для НС = 2 По тзПунктыДоставки.КоличествоСтрок() Цикл
		
		тзМаршруты.НоваяСтрока();
		
		тзПунктыДоставки.ПолучитьСтрокуПоНомеру(1);
		СкопироватьГеоданные(тзМаршруты, "Откуда", тзПунктыДоставки, "");
		
		тзПунктыДоставки.ПолучитьСтрокуПоНомеру(НС);
		СкопироватьГеоданные(тзМаршруты, "Куда", тзПунктыДоставки, "");
		
	КонецЦикла;	
	
КонецПроцедуры	
//===========================================
Процедура ОбновитьДанныеТаблицыМаршрутов()
	
	тзМаршруты.ВыбратьСтроки();
	
	Пока тзМаршруты.ПолучитьСтроку() = 1 Цикл
		
		НС = 0;
		
		Если тзПунктыДоставки.НайтиЗначение(тзМаршруты
			.ОткудаИд, НС, "Ид") = 0 Тогда
				
			тзПунктыДоставки.НоваяСтрока();
			СкопироватьГеоданные(тзМаршруты, "Откуда", тзПунктыДоставки, "");
			
		КонецЕсли;
		
		Если тзПунктыДоставки.НайтиЗначение(тзМаршруты
			.КудаИд,   НС, "Ид") = 0 Тогда
				
			тзПунктыДоставки.НоваяСтрока();
			СкопироватьГеоданные(тзМаршруты, "Куда", тзПунктыДоставки, "");
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры	
//===========================================
Процедура ДополнитьТаблицуМаршрутовДаннымиГеокодирования()
	
	Если тзМаршруты.КоличествоСтрок() = 0 Тогда
		
		СоздатьТаблицуМаршрутов();
		
	Иначе
	
		ОбновитьДанныеТаблицыМаршрутов();
		
	КонецЕсли;	
	
	ПриОбновленииДанныхТаблицыМаршрутов();
	
КонецПроцедуры	
//===========================================
Функция СоставитьСтрокуГеокодированияПунктовДоставки( // подготовка строки для запроса 
						// на геокодирование, возвращает значение - количество пунктов 
						// доставки в запросе. Параметры:
	ОбъемВыборки,   	// ограничение количества пунктов доставки в одном запросе
	стрГеокодирования  	// строка запроса
	)
	
	стрГеокодирования = "";
	
	КолвоОтправлено = 0;
	
	тзПунктыДоставки.ВыбратьСтроки();
	Пока тзПунктыДоставки.ПолучитьСтроку() = 1 Цикл
		
		Если тзПунктыДоставки.Уточнен = 0 Тогда
			
			стрГеокодирования = стрГеокодирования 
				+ ?(стрГеокодирования = "", "", ",");
			
			Если ПустоеЗначение(тзПунктыДоставки.Широта) = 0 Тогда

				стрГеокодирования = стрГеокодирования + "'" 
					+ Формат(тзПунктыДоставки.Широта,  "Ч10.6") + "," 
					+ Формат(тзПунктыДоставки.Долгота, "Ч10.6") + "'";	
				
			Иначе

				стрГеокодирования = стрГеокодирования + "'" 
					+ тзПунктыДоставки.Адрес + "," 
					+ тзПунктыДоставки.Область + "'";
				
			КонецЕсли;
			
			КолвоОтправлено = КолвоОтправлено + 1;
			
			Если КолвоОтправлено = ОбъемВыборки Тогда
				
				Прервать;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;	
    
	стрГеокодирования = "objToGeocode = [" + стрГеокодирования + "]";
	
	Возврат КолвоОтправлено;
	
КонецФункции	
//===========================================
Процедура ЗагрузитьМаршрутыИзФайла(ПолноеИмяФайла)
	
	ПодготовитьТаблицы();
	
	Текст = СоздатьОбъект("Текст");
	
	Текст.Открыть(ПолноеИмяФайла);
	
	Для НС = 1 По Текст.КоличествоСтрок() Цикл
		
		стрДанные = Текст.ПолучитьСтроку(НС);
		
		тДанные = СтрЗаменить(стрДанные, ";", РазделительСтрок);
		
		тзМаршруты.НоваяСтрока();
		
		Для НК = 1 По СтрКоличествоСтрок(тДанные) Цикл
			
			тзМаршруты.УстановитьЗначение(тзМаршруты.НомерСтроки, НК,
				СтрПолучитьСтроку(тДанные, НК));
				
		КонецЦикла;		
		
		тзМаршруты.ИдПоследовательности = "00-" 
			+ Формат(НС, "Ч(0)3") + "-001";
			
	КонецЦикла;
	
	ПодготовитьДанныеДляГеокодирования();
	
КонецПроцедуры
//===========================================
Процедура ВыгрузитьМаршрутыВФайл();
	
	Текст = СоздатьОбъект("Текст");
	
    Для НС = 1 По тзМаршруты.КоличествоСтрок() Цикл
		
		стрДанные = "";
		
		Для НК = 1 По тзМаршруты.КоличествоКолонок() Цикл
			
			стрДанные = стрДанные + ?(стрДанные = "", "", ";") 
				+ тзМаршруты.ПолучитьЗначение(НС, НК);
	
		КонецЦикла;
			
		Текст.ДобавитьСтроку(стрДанные);
		
	КонецЦикла;
	
	Текст.Показать("Таблица маршрутов");
	
КонецПроцедуры	
//===========================================
Процедура ОбработатьРезультатПодбораПунктаДоставки()
	
	тзПунктыДоставки.НоваяСтрока();
	тзПунктыДоставки.Широта  = Карта.UserPointCoordX;
	тзПунктыДоставки.Долгота = Карта.UserPointCoordY;
	тзПунктыДоставки.Уточнен = 0;
	
	тзПунктыДоставки.ГеоОбъект = УстановитьОтметкуНаКарте(тзПунктыДоставки.Широта, 
		тзПунктыДоставки.Долгота,  тзПунктыДоставки.НомерСтроки);
		
КонецПроцедуры
//===========================================
Процедура ПоказатьПунктыДоставкиНаКарте()
	
	тзПунктыДоставки.ВыбратьСтроки();
	Пока тзПунктыДоставки.ПолучитьСтроку() = 1 Цикл
		
		тзПунктыДоставки.ГеоОбъект = УстановитьОтметкуНаКарте(тзПунктыДоставки.Широта, 
			тзПунктыДоставки.Долгота,  тзПунктыДоставки.НомерСтроки);	
		
	КонецЦикла;	
	
КонецПроцедуры	
//===========================================
// Управление картой
//===========================================
Функция СтатусКарты(Статус = "")
	
	Если Статус <> "" Тогда
		
		Форма.пСтатусКарты.Заголовок(Статус);
			
	КонецЕсли;	
		
	Возврат Форма.пСтатусКарты.Заголовок();
	
КонецФункции
//===========================================
Процедура ВстроитьБраузер()
	
	АктивИкс = СоздатьОбъект("АктивИкс");
	АктивИкс.УстановитьАтрибут(Форма, "пКарта");
	АктивИкс.СоздатьЭУ("Shell.Explorer.2");
	Браузер = АктивИкс.Объект;
	
КонецПроцедуры
//===========================================
Функция АдресКарты(Адрес)
    Перем Ш, В;
	
	Если (ПустоеЗначение(пАдресСервера) = 0) 
		и (ПустоеЗначение(пКлючКарты) = 0) Тогда
		
		ПолучитьАктуальныеРазмерыКарты(Ш, В);
			
		Адрес = пАдресСервера + "/?apikey="	+ пКлючКарты
			+ "&X=" + пШирота + "&Y=" + пДолгота
			+ "&W=" + (Ш - РазмерОтступа) 
			+ "&H=" + (В - РазмерОтступа);
		
		Возврат 1;
		
	Иначе
		
		Возврат 0;
		
	КонецЕсли;	
	
КонецФункции
//===========================================
Процедура ЗагрузитьКарту()
	Перем Адрес;
	
	Если (ПустоеЗначение(Браузер) = 0) 
		и (АдресКарты(Адрес) = 1) Тогда
	    
		СтатусКарты("ОжиданиеКарты");
		
		Браузер.Navigate(Адрес);
		
	КонецЕсли;	
	
КонецПроцедуры
//===========================================
Процедура ЗадатьРазмерыКарты(Ш, В)
	
	Если СтатусКарты() <> "ОжиданиеКарты" Тогда
					
		Карта.MapResize(Ш - РазмерОтступа, В - РазмерОтступа);
		
	КонецЕсли;	
	
КонецПроцедуры
//===========================================
Функция УстановитьОтметкуНаКарте(Широта, Долгота, Маркер = "", Подсказка = "")
	
	Возврат Карта.AddSimplePoint(Карта.OurYandexMap, 
		Широта, Долгота, Маркер, Подсказка, 1);
	
КонецФункции
//===========================================
Процедура УдалитьПунктыДоставкиНаКарте()
	
	тзПунктыДоставки.ВыбратьСтроки();
	Пока тзПунктыДоставки.ПолучитьСтроку() = 1 Цикл
		
		Попытка
			
			Карта.RemovePoint(Карта.OurYandexMap, 
				тзПунктыДоставки.Объект);
				
		Исключение
// карта может быть неактивна или имеется другая причина, по которой не сработало			
				
		КонецПопытки;	
		
	КонецЦикла;
	
КонецПроцедуры
//===========================================
Процедура ОтправитьЗапросНаГеокодирование(стрГеокодирования)
		
	Карта.ClearAll();
	Карта.GeocodeArray(Карта.OurYandexMap, стрГеокодирования);
	мВремяЗапроса = _GetPerformanceCounter();
			
КонецПроцедуры
//===========================================
Функция АнализАдресныхДанных(АдресныеДанные)
	
	тАдресныеДанные = СтрЗаменить(АдресныеДанные, 
		".", РазделительСтрок);
		
	сАнализ = СоздатьОбъект("СписокЗначений");
	сАнализ.Установить("ДанныеРегиона",
		СтрПолучитьСтроку(тАдресныеДанные, 1));	
	сАнализ.Установить("ДанныеВПределахНП",
		СтрПолучитьСтроку(тАдресныеДанные, 2));
		
	Возврат сАнализ;	
	
КонецФункции	
//=========================================== 
Функция ДанныеРегиона(АдресныеДанные)
	
	стрДанныеРегиона = АнализАдресныхДанных(АдресныеДанные)
		.Получить("ДанныеРегиона");
		
	тДанныеРегиона = СтрЗаменить(стрДанныеРегиона,
		",", РазделительСтрок);
		
	стрРезультат = "";
	Для й = 1 По СтрКоличествоСтрок(тДанныеРегиона)	Цикл
		
		стрЭлементДанных = СтрПолучитьСтроку(тДанныеРегиона, й);
		
		Если стрЭлементДанных <> "undefined" Тогда
			
			стрРезультат = ?(стрРезультат = "", "", ",")
				+ стрЭлементДанных;
			
		КонецЕсли;
		
	КонецЦикла;

	Возврат стрРезультат;	
	
КонецФункции
//=========================================== 
Функция ДанныеВПределахНП(АдресныеДанные)
	
	Возврат АнализАдресныхДанных(АдресныеДанные)
		.Получить("ДанныеВПределахНП");
	
КонецФункции
//===========================================
Процедура СохранитьРезультатЗапросаНаГеокодирование()
	
	НС = Карта.GeocodeResultsCount;

	Пока НС > 0 Цикл
	    
		тзПунктыДоставки.ПолучитьСтрокуПоНомеру(НС);
		
		НС = НС - 1;
		
		Карта.GetGeocodeResult(НС); 
		АдресныеДанные = Карта.UserPointLocation;	
		
		тзПунктыДоставки.Адрес 	 = ДанныеВПределахНП(АдресныеДанные);
		тзПунктыДоставки.Область = ДанныеРегиона(АдресныеДанные);
		тзПунктыДоставки.Широта  = Число(Карта.UserPointCoordX);
		тзПунктыДоставки.Долгота = Число(Карта.UserPointCoordY);
	    тзПунктыДоставки.Уточнен = 1;			
			
	КонецЦикла;
			
КонецПроцедуры	
//===========================================
// Управление элементами формы
//===========================================
Функция Присвоить(А, В)
	
	А = В;
	
КонецФункции
//===========================================
Процедура ОтобразитьЧислоЗаданийКарты(Колво)
	
	Форма.пЗаданийКарты.Заголовок(Колво);
	
КонецПроцедуры
//===========================================
Процедура ОтобразитьНаФормеРезультатВыбораТочкиНаКарте()
	
	Форма.нШирота .Заголовок(Карта.UserPointCoordX);
	Форма.нДолгота.Заголовок(Карта.UserPointCoordY);
	
КонецПроцедуры	
//===========================================
Процедура ВывестиТаблицуВТаблицуЗначений(ИмяТаблицы, ТабЗнач)
	
	Таблица = СоздатьОбъект("Таблица");
	Таблица.ИсходнаяТаблица(ИмяТаблицы);
	
	Таблица.Вывести();
	
	ТабЗнач = СоздатьОбъект("ТаблицаЗначений");
	
	Для НК = 1 По Таблица.ШиринаТаблицы() Цикл
		
		ТабЗнач.НоваяКолонка(Таблица.Область(1, НК).Текст);
		
	КонецЦикла;	
	
	Для НС = 2 По Таблица.ВысотаТаблицы() Цикл
		
		ТабЗнач.НоваяСтрока();
		
		Для НК = 1 По Таблица.ШиринаТаблицы() Цикл
			
			ТабЗнач.УстановитьЗначение(НС - 1, НК, 
				Таблица.Область(НС, НК).Текст);
			
		КонецЦикла;
		
	КонецЦикла;	
	
КонецПроцедуры	
//===========================================
Процедура ЗадатьНачальныеНастройки()
	
	ВывестиТаблицуВТаблицуЗначений("Привязки", тзПривязки);
	
КонецПроцедуры
//===========================================
Функция ЗаписаныПарамерыГлавногоОкна()
	
	Возврат 1 - ПустоеЗначение(мШирина);
	
КонецФункции	
//===========================================
Процедура СохранитьПараметрыГлавногоОкна()
    Перем Х, У, Ш, В;
	
	РасшФорма = СоздатьОбъект("РасширениеФормы");
	РасшФорма.УстановитьФорму(Форма);
	
	мШирина = РасшФорма.Ширина;
	мВысота = РасшФорма.Высота;
	
	тзПривязки.ВыбратьСтроки();
	Пока тзПривязки.ПолучитьСтроку() = 1 Цикл
		
		Атрибут = РасшФорма.ПолучитьАтрибут(тзПривязки.ИмяАтрибута);
		
		Атрибут.ПолучитьКоординаты(Х, У, Ш, В);
		
		Если тзАтрибуты.НайтиЗначение(тзПривязки.ИмяАтрибута,, 
			"ИмяАтрибута") = 0 Тогда
		
			тзАтрибуты.НоваяСтрока();
			тзАтрибуты.ИмяАтрибута = тзПривязки.ИмяАтрибута;
			тзАтрибуты.Х = Х; 
			тзАтрибуты.У = У;
			тзАтрибуты.Ш = Ш;
			тзАтрибуты.В = В;
		
		КонецЕсли;
				
	КонецЦикла;	
	
КонецПроцедуры	
//===========================================
Процедура ПолучитьАктуальныеРазмерыКарты(Ш, В)
	
	РасшФорма = СоздатьОбъект("РасширениеФормы");
	РасшФорма.УстановитьФорму(Форма);
	
	Атрибут = РасшФорма.ПолучитьАтрибут("пКарта");
	Атрибут.ПолучитьКоординаты(,, Ш, В);
			
КонецПроцедуры
//===========================================
Процедура НастроитьРазмерыКарты()
	Перем Ш, В;
	
	ПолучитьАктуальныеРазмерыКарты(Ш, В);
	
	ЗадатьРазмерыКарты(Ш, В);
	
КонецПроцедуры	
//===========================================
Функция ПолучитьПриращение(ИмяАтрибута, Показатель)
	Перем Х, У, Ш, В;
	
	РасшФорма = СоздатьОбъект("РасширениеФормы");
	РасшФорма.УстановитьФорму(Форма);
		
	Если ИмяАтрибута = "Форма" Тогда 
		
		Если Показатель = "Ш" Тогда
			Возврат РасшФорма.Ширина - мШирина;
		Иначе
			Возврат РасшФорма.Высота - мВысота;
		КонецЕсли;	
		
	Иначе
		
		НомСтрНастроек = 0;
		Если тзАтрибуты.НайтиЗначение(ИмяАтрибута, 
			НомСтрНастроек, "ИмяАтрибута") = 1 Тогда
										
			Атрибут = РасшФорма.ПолучитьАтрибут(ИмяАтрибута);
			Атрибут.ПолучитьКоординаты(Х, У, Ш, В);
			
			стрШаблон = "[" + Показатель 
				+ "- тзАтрибуты.ПолучитьЗначение(НомСтрНастроек, """ 
				+ Показатель + """)]"; 
			
			Возврат Шаблон(стрШаблон);
			
		КонецЕсли;	
						
	КонецЕсли;	
	
	Возврат 0;
	
КонецФункции	
//===========================================
Процедура ОбработкаПривязокРеквизитовФормы()
	Перем Х, У, Ш, В;

	Если ЗаписаныПарамерыГлавногоОкна() = 1 Тогда
		
		РасшФорма = СоздатьОбъект("РасширениеФормы");
		РасшФорма.УстановитьФорму(Форма);
		
		НомСтрПривязки = 1;
		Пока НомСтрПривязки <= тзПривязки.КоличествоСтрок() Цикл
			
			тзПривязки.ПолучитьСтрокуПоНомеру(НомСтрПривязки); 
			
			Атрибут = РасшФорма.ПолучитьАтрибут(тзПривязки.ИмяАтрибута);
			Атрибут.ПолучитьКоординаты(Х, У, Ш, В);
			
			НомСтрНастроек = 0;
			Если тзАтрибуты.НайтиЗначение(тзПривязки.ИмяАтрибута, 
				НомСтрНастроек, "ИмяАтрибута") = 1 Тогда
				
				тзАтрибуты.ПолучитьСтрокуПоНомеру(НомСтрНастроек);
				
				Показатель = ?((тзПривязки.Координата = "Х") 
					или (тзПривязки.Координата = "Ш"), "Ш", "В");
					
				Шаблон( "[Присвоить(" + тзПривязки.Координата 
					+ ", тзАтрибуты." + тзПривязки.Координата 
					+ " + ПолучитьПриращение(тзПривязки.Объект, Показатель))]");	
				
			КонецЕсли;	
			
			Атрибут.УстановитьКоординаты(Х, У, Ш, В);
			
			НомСтрПривязки = НомСтрПривязки + 1;
			
		КонецЦикла;
		
		НастроитьРазмерыКарты();

	КонецЕсли;	
	
КонецПроцедуры
//===========================================
// Обработчики событий
//===========================================
Процедура ИндикаторВыполнения()
	
	ТекВремяСМоментаЗапроса = _GetPerformanceCounter() - мВремяЗапроса;
	Период = ТекВремяСМоментаЗапроса / 1000;
	Время  = Период - Цел(Период);	
	
	Если Время < 0.25 Тогда 
		стрЗаголовок = "[" + Симв(150) + "] Журнал";
	ИначеЕсли Время < 0.5 Тогда
		стрЗаголовок = "[\] Журнал";
	ИначеЕсли Время < 0.75 Тогда
		стрЗаголовок = "[ "  + Симв(108) + "] Журнал";
	Иначе
		стрЗаголовок = "[/] Журнал";
	КонецЕсли;	
	
	Форма.грЖурнал.Заголовок(стрЗаголовок); 
	
КонецПроцедуры
//===========================================
Процедура ПоЗавершениюЗагрузкиКарты()
	
	СтатусКарты("Готово");
		
	Карта = Браузер.Document.parentWindow;
	
КонецПроцедуры
//===========================================
Процедура ПриВыбореТочкиНаКарте()
	
	ОтобразитьНаФормеРезультатВыбораТочкиНаКарте();
		
	Если СтатусКарты() = "Подбор" Тогда

		ОбработатьРезультатПодбораПунктаДоставки();	
		
	КонецЕсли;
	
КонецПроцедуры
//===========================================
Процедура ПриЗавершенииОперацииГеокодирования()
	
	СохранитьРезультатЗапросаНаГеокодирование();
		
	ВыполнитьГеокодированиеИтерация();
			
КонецПроцедуры	
//===========================================
Процедура ПриНачалеПодбораПунктовДоставки()
	
	СтатусКарты("Подбор");
	
	Форма.кнПодбор.Заголовок("Готово");
	
	ПодготовитьТаблицы();
	
КонецПроцедуры	
//===========================================
Процедура ПриЗавершенииПодбораПунктовДоставки()
	
	Форма.кнПодбор.Заголовок("Подбор");
	
	ВыполнитьГеокодированиеНачало();
	
КонецПроцедуры
//===========================================
Процедура ЗагрузитьДанныеИзФайла(ПолноеИмяФайла)
	
	СтатусКарты("Загрузка");
		
	ЗагрузитьМаршрутыИзФайла(ПолноеИмяФайла);
		
	ПодготовитьДанныеДляГеокодирования();
		
	ВыполнитьГеокодированиеНачало();
	
КонецПроцедуры
//===========================================
Процедура ПриНачалеАвтоПодбораПунктовДоставки()
	
	СтатусКарты("АвтоПодбор");

	ПодготовитьТаблицы();
	
	АвтоПодборПунктовДоставки();
	
КонецПроцедуры
//===========================================
Процедура ПриОбновленииДанныхТаблицыМаршрутов()
	
	Если СтатусКарты() <> "Подбор" Тогда
		
		ПоказатьПунктыДоставкиНаКарте();
		
	КонецЕсли;
	
	СтатусКарты("Готово");	
		
КонецПроцедуры		
//===========================================
Процедура ОбработатьСобытие(Событие)
	
	Сообщить(Событие);
	
	Если Событие = "MapReady" Тогда
		
		ПоЗавершениюЗагрузкиКарты();
	
	ИначеЕсли Событие = "UserPointing" Тогда
		
		ПриВыбореТочкиНаКарте();
		
	ИначеЕсли Событие = "GeocodingDone" Тогда
		
		ПриЗавершенииОперацииГеокодирования();
		
	КонецЕсли;	
	
КонецПроцедуры	
//===========================================
Процедура ОбработатьПрерывание(Событие)
	
	Если ПустоеЗначение(Событие) = 0 Тогда
		
		Если Событие <> "BackgroundTask" Тогда
// сбросим, чтобы не мешал обрабатывать дальше своими повторными вызовами
			Браузер.Document.parentWindow.LatestEvent = "";
		
		КонецЕсли;

		ОбработатьСобытие(Событие);
		
	Иначе
		
		
		
	КонецЕсли;	
	
КонецПроцедуры	
//===========================================
Процедура ОжиданиеСобытийКарты()
    Перем Событие;
	
	ИндикаторВыполнения();
	
	Попытка 
		
		Событие = Браузер.Document.parentWindow.LatestEvent;
		
	Исключение
// ожидание инициализации объектов карты		
		Возврат;
		
	КонецПопытки;
	
	ОбработатьПрерывание(Событие);
	
КонецПроцедуры	
//===========================================
Процедура ЗапускОжиданияСобытийКарты()
	
	мРасшФорма = СоздатьОбъект("РасширениеФормы");
	мРасшФорма.ОбработкаОжидания("ОжиданиеСобытийКарты", пПериодОпроса);
	
КонецПроцедуры
//===========================================
// Интерфейс
//===========================================
Функция ВыбратьФайл(ИмяФайла, ИмяКаталога)
	
	Возврат ФС.ВыбратьФайл(0, ИмяФайла, ИмяКаталога, 
		"Файл для загрузки", "Текстовые файлы (*.txt) |*.txt");
	
КонецФункции
//===========================================
Процедура ПриОткрытии()
	
КонецПроцедуры
//===========================================
Процедура ПослеОткрытия()
	
	ЗадатьНачальныеНастройки();
	
	СохранитьПараметрыГлавногоОкна();
	
	ЗапускОжиданияСобытийКарты();
	
	ВстроитьБраузер();
	
	ЗагрузитьКарту();
	
КонецПроцедуры
//===========================================
Процедура ПриИзмененииРазмераОкна(ТипСобытия, Ширина, Высота)
	
	ОбработкаПривязокРеквизитовФормы();
		
КонецПроцедуры
//===========================================
Процедура ПоКнопкеПодбор()
	
	Если СтатусКарты() = "Готово" Тогда
	
		ПриНачалеПодбораПунктовДоставки();
		
	Иначе
		
		ПриЗавершенииПодбораПунктовДоставки();
		
	КонецЕсли;	

КонецПроцедуры
//===========================================
Процедура ПоКнопкеЗагрузить()
	Перем ИмяФайла, ИмяКаталога;
	
	Если ВыбратьФайл(ИмяФайла, ИмяКаталога) = 1 Тогда
		
		ЗагрузитьДанныеИзФайла(ИмяКаталога + ИмяФайла);
		
	КонецЕсли;
	
КонецПроцедуры
//===========================================
Процедура ПоКнопкеВыгрузить()
	
	ВыгрузитьМаршрутыВФайл();
	
КонецПроцедуры
//===========================================
Процедура ПоКнопкеАвтоПодбор()
	
	ПриНачалеАвтоПодбораПунктовДоставки(); 
	
КонецПроцедуры	
//===========================================
// Модель развозки
//===========================================
Математика = СоздатьОбъект("Math");
сзСлЧис = СоздатьОбъект("СписокЗначений");

тзПунктыДоставки = СоздатьОбъект("ТаблицаЗначений");
тзПунктыДоставки.НоваяКолонка("Ид");
тзПунктыДоставки.НоваяКолонка("Широта"); 
тзПунктыДоставки.НоваяКолонка("Долгота");
тзПунктыДоставки.НоваяКолонка("Адрес");
тзПунктыДоставки.НоваяКолонка("Область"); 
тзПунктыДоставки.НоваяКолонка("Уточнен");
тзПунктыДоставки.НоваяКолонка("КлючСтроки"); 
тзПунктыДоставки.НоваяКолонка("ГеоОбъект");

тзМаршруты = СоздатьОбъект("ТаблицаЗначений"); 
тзМаршруты.НоваяКолонка("Вес");
тзМаршруты.НоваяКолонка("Объем");
тзМаршруты.НоваяКолонка("ОткудаИд"); 
тзМаршруты.НоваяКолонка("ОткудаШирота"); 
тзМаршруты.НоваяКолонка("ОткудаДолгота");
тзМаршруты.НоваяКолонка("ОткудаАдрес");
тзМаршруты.НоваяКолонка("ОткудаОбласть");
тзМаршруты.НоваяКолонка("КудаИд"); 
тзМаршруты.НоваяКолонка("КудаШирота");
тзМаршруты.НоваяКолонка("КудаДолгота");
тзМаршруты.НоваяКолонка("КудаАдрес");
тзМаршруты.НоваяКолонка("КудаОбласть");
тзМаршруты.НоваяКолонка("Расстояние"); 
тзМаршруты.НоваяКолонка("ИдПоследовательности");
тзМаршруты.НоваяКолонка("КлючСтроки");
//===========================================
// Управление картой
//===========================================
СтатусКарты("ОжиданиеКарты");
РазмерОтступа = 16;	
//===========================================
// Управление элементами формы
//===========================================
сзЦвета = СоздатьОбъект("СписокЗначений");
сзЦвета.Установить("Синий", 8000000); 
сзЦвета.Установить("Зеленый", 30000);
сзЦвета.Установить("Красный", 1000);

тзАтрибуты = СоздатьОбъект("ТаблицаЗначений");
тзАтрибуты.НоваяКолонка("ИмяАтрибута"); 
тзАтрибуты.НоваяКолонка("Х", "Число");
тзАтрибуты.НоваяКолонка("У", "Число");
тзАтрибуты.НоваяКолонка("Ш", "Число");
тзАтрибуты.НоваяКолонка("В", "Число");
//===========================================
// Обработчики событий
//===========================================
мВремяЗапроса = 0;
//===========================================
// Интерфейс
//===========================================